---
# https://opentelemetry.io/docs/kubernetes/getting-started/#deployment-collector
mode: daemonset

image:
  repository: otel/opentelemetry-collector-k8s

presets:
  kubernetesAttributes:
    enabled: true
  kubeletMetrics:
    enabled: true
  logsCollection:
    enabled: true

config:
  receivers:
    kubeletstats:
      insecure_skip_verify: true
    prometheus:
      config:
        scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
          - job_name: k8s
            kubernetes_sd_configs:
            - role: pod
              selectors:
              - role: pod
                field: "spec.nodeName=${K8S_NODE_NAME}"
            relabel_configs:
            # scrape pods annotated with "prometheus.io/scrape: true"
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              regex: "true"
              action: keep
            # read the port from "prometheus.io/port: <port>" annotation and update scraping address accordingly
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              # escaped $1:$2
              replacement: $$1:$$2
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name

  exporters:
    otlphttp/mimir:
      endpoint: http://mimir-distributor.mimir:8080/otlp

  service:
    pipelines:
      metrics:
        exporters: [ otlphttp/mimir ]
